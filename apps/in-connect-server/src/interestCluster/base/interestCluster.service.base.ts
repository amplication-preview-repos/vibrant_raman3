/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InterestCluster as PrismaInterestCluster,
} from "@prisma/client";

export class InterestClusterServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InterestClusterCountArgs, "select">
  ): Promise<number> {
    return this.prisma.interestCluster.count(args);
  }

  async interestClusters(
    args: Prisma.InterestClusterFindManyArgs
  ): Promise<PrismaInterestCluster[]> {
    return this.prisma.interestCluster.findMany(args);
  }
  async interestCluster(
    args: Prisma.InterestClusterFindUniqueArgs
  ): Promise<PrismaInterestCluster | null> {
    return this.prisma.interestCluster.findUnique(args);
  }
  async createInterestCluster(
    args: Prisma.InterestClusterCreateArgs
  ): Promise<PrismaInterestCluster> {
    return this.prisma.interestCluster.create(args);
  }
  async updateInterestCluster(
    args: Prisma.InterestClusterUpdateArgs
  ): Promise<PrismaInterestCluster> {
    return this.prisma.interestCluster.update(args);
  }
  async deleteInterestCluster(
    args: Prisma.InterestClusterDeleteArgs
  ): Promise<PrismaInterestCluster> {
    return this.prisma.interestCluster.delete(args);
  }
}
